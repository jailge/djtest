"""
Django settings for djtest project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import pymysql
import djcelery
from kombu import Queue, Exchange

pymysql.install_as_MySQLdb()
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


#djcelery 配置
djcelery.setup_loader()
CELERY_TIMEZONE = 'Asia/Shanghai'
BROKER_URL = 'amqp://admin:admin@10.10.6.10:5672/'
# BROKER_URL = 'amqp://forward:password@10.10.0.22:5672/vubuntu'
CELERY_RESULT_BACKEND = 'djcelery.backends.database:DatabaseBackend'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'
CELERY_ENABLE_UTC = False

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
#执行40个任务后死掉重生
CELERYD_MAX_TASKS_PER_CHILD = 40
#任务过期时间
CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24

CELERYD_TASK_SOFT_TIME_LIMIT = 30

CELERY_ROUTES = {
    'apps1.tasks.add': {'queue': 'dj_for_add', 'routing_key': 'dj_for_add'},
    'apps1.tasks.mul': {'queue': 'dj_for_mul', 'routing_key': 'dj_for_mul'},
    'test1.tasks.add': {'queue': 'djtest_for_test1', 'routing_key': 'djtest_for_#'},
    'test1.tasks.add_delay': {'queue': 'djtest_for_test1', 'routing_key': 'djtest_for_#'},
    'test1.tasks.add_timeout': {'queue': 'djtest_for_test1', 'routing_key': 'djtest_for_#'},
    # 'test1.tasks.db_exec_test': {'queue':'djtest_for_test1', 'routing_key': 'djtest.exec'},
   # 'celerytest.tasks.hostname': {'queue': 'tasks_for_cx', 'routing_key': 'tasks_for_cx'},
}

#
CELERY_QUEUES = (
        Queue(name='default', exchange=Exchange('default', 'direct'), routing_key='default', ),
        Queue(name='dj_for_add', exchange=Exchange('dj_for_add', 'direct'), routing_key='dj_for_add'),
        Queue(name='dj_for_mul', exchange=Exchange('dj_for_mul', 'direct'), routing_key='dj_for_mul'),
        Queue(name='djtest_for_test1', exchange=Exchange('djtest_for_test1', 'topic'), routing_key='djtest.#'),
        Queue(name='djtest_for_test2', exchange=Exchange('djtest_for_test1', 'topic'), routing_key='djtest.#'),
        Queue(name='djtest_for_test3', exchange=Exchange('djtest_for_test1', 'topic'), routing_key='djtest.#'),
        # Queue('djtest_for_test1', routing_key='djtest.#'),
)

CELERY_DEFAULT_EXCHANGE = 'celery'
CELERY_DEFAULT_EXCHANGE_TYPE = 'topic'
CELERY_DEFAULT_ROUTING_KEY = 'celery'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_j-9ckx4b(rx@76+39+4y2*&*^-u84@ra5u9b0cs^3mi770g^1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djcelery',
    'test1',
    'q_manage',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djtest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djtest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'NAME': 'djtest',
        'HOST': '10.10.6.11',
        'USER': 'root',
        'PASSWORD': 'root',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]



# class MyRouter(object):
#     def route_for_task(self, task, args=None, kwargs=None):
#         if task.startswith()